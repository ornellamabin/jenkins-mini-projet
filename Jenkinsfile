pipeline {
    agent any  // Chang√© de 'docker' √† 'any' car Docker n'est pas install√©
    
    environment {
        // Configuration de base
        DOCKER_IMAGE = 'votreusername/springboot-app'
        DOCKER_TAG = "${env.BRANCH_NAME == 'main' ? 'latest' : env.BRANCH_NAME}"
    }
    
    stages {
        // √âTAPE 1: TESTS AUTOMATIS√âS
        stage('Tests Automatis√©s') {
            steps {
                script {
                    echo 'üß™ Ex√©cution des tests unitaires et d int√©gration...'
                    sh 'mvn test'
                }
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        
        // √âTAPE 2: QUALIT√â DE CODE AVEC SONARCLOUD
        stage('Qualit√© de Code') {
            when {
                expression { 
                    env.BRANCH_NAME == 'main' 
                }
            }
            steps {
                script {
                    echo 'üîç Analyse statique avec SonarCloud...'
                    // SonarCloud sera ajout√© plus tard
                    echo 'SonarCloud configur√© mais non ex√©cut√© (besoin de credentials)'
                }
            }
        }
        
        // √âTAPE 3: COMPILATION ET PACKAGING
        stage('Compilation et Packaging') {
            steps {
                script {
                    echo 'üì¶ Compilation et cr√©ation du JAR...'
                    sh 'mvn clean package -DskipTests'
                    echo '‚úÖ JAR cr√©√© avec succ√®s!'
                    
                    // Docker d√©sactiv√© temporairement
                    echo 'üê≥ Docker d√©sactiv√© (non install√© sur Jenkins)'
                }
            }
        }
    }
    
    post {
        always {
            script {
                echo 'üßπ Nettoyage des ressources...'
                // Pas de docker logout car Docker n'est pas install√©
            }
        }
        
        success {
            script {
                echo '‚úÖ Pipeline ex√©cut√©e avec succ√®s!'
                // Slack d√©sactiv√© temporairement
                echo 'üìß Notification Slack d√©sactiv√©e (configuration manquante)'
            }
        }
        
        failure {
            script {
                echo '‚ùå Pipeline en √©chec!'
                // Slack d√©sactiv√© temporairement
                echo 'üìß Notification Slack d√©sactiv√©e (configuration manquante)'
            }
        }
    }
}