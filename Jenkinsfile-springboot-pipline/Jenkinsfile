pipeline {
    agent any
    
    tools {
        maven 'M3'
        jdk 'jdk17'
    }
    
    environment {
        // Variables d'environnement simples
        SLACK_CHANNEL = '#general'  // Canal par d√©faut
    }
    
    options {
        timeout(time: 30, unit: 'MINUTES')
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    echo 'üöÄ Clonage du d√©p√¥t...'
                    git branch: "main",
                         url: 'https://github.com/ornellamabin/jenkins-mini-projet.git',
                         credentialsId: 'github-credentials',
                         extensions: [[$class: 'CloneOption', depth: 1, shallow: true]]
                }
            }
        }
        
        stage('Build') {
            steps {
                script {
                    echo 'üî® Construction du projet...'
                    dir('springbootapp') {
                        sh 'mvn clean compile'
                    }
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    echo 'üß™ Ex√©cution des tests...'
                    dir('springbootapp') {
                        sh 'mvn test'
                    }
                }
            }
            post {
                always {
                    junit 'springbootapp/target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Package') {
            steps {
                script {
                    echo 'üì¶ Packaging de l application...'
                    dir('springbootapp') {
                        sh 'mvn package -DskipTests'
                    }
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    echo 'üöÄ D√©ploiement...'
                    dir('springbootapp') {
                        echo 'D√©ploiement r√©ussi!'
                        archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                    }
                }
            }
        }
    }
    
    post {
        always {
            echo 'üßπ Nettoyage de l espace de travail...'
        }
        success {
            echo '‚úÖ Pipeline ex√©cut√© avec succ√®s!'
            // D√©commentez quand Slack sera configur√© :
            // slackSend(channel: "${env.SLACK_CHANNEL}", message: "‚úÖ SUCC√àS: ${env.JOB_NAME} #${env.BUILD_NUMBER}")
        }
        failure {
            echo '‚ùå √âchec du pipeline!'
            // D√©commentez quand Slack sera configur√© :
            // slackSend(channel: "${env.SLACK_CHANNEL}", message: "‚ùå √âCHEC: ${env.JOB_NAME} #${env.BUILD_NUMBER}")
        }
    }
}