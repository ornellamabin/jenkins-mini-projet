pipeline {
    agent {
        docker {
            image 'maven:3.8.4-openjdk-11'  // Image Maven avec JDK 11
            args '-v /root/.m2:/root/.m2'   // Cache Maven pour acc√©l√©rer les builds
        }
    }
    
    options {
        timeout(time: 30, unit: 'MINUTES')
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    echo 'üöÄ Clonage du d√©p√¥t avec shallow clone...'
                    git branch: 'main',
                         url: 'https://github.com/ornellamabin/jenkins-mini-projet.git',
                         credentialsId: 'github-credentials',
                         extensions: [
                             [$class: 'CloneOption', 
                              depth: 1, 
                              shallow: true,
                              noTags: false,
                              timeout: 60],
                             [$class: 'CheckoutOption', timeout: 30]
                         ]
                }
            }
        }
        
        stage('Build') {
            steps {
                script {
                    echo 'üî® Construction du projet...'
                    sh 'mvn clean compile'
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    echo 'üß™ Ex√©cution des tests...'
                    sh 'mvn test'
                }
            }
        }
        
        stage('Package') {
            steps {
                script {
                    echo 'üì¶ Packaging de l application...'
                    sh 'mvn package -DskipTests'
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    echo 'üöÄ D√©ploiement...'
                    // Ajoutez vos √©tapes de d√©ploiement ici
                    echo 'D√©ploiement r√©ussi!'
                    
                    // Exemple: Copie du JAR
                    sh 'cp target/*.jar /opt/app/ || echo "Aucun fichier JAR √† copier"'
                }
            }
        }
    }
    
    post {
        always {
            echo 'üßπ Nettoyage...'
            cleanWs()
        }
        success {
            echo '‚úÖ Pipeline ex√©cut√© avec succ√®s!'
        }
        failure {
            echo '‚ùå √âchec du pipeline!'
        }
    }
}